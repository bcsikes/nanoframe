name: CI
on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Git repository
      uses: actions/checkout@v1
    - name: Get Ruby version
      run: echo "::set-output name=RUBY_VERSION::$(cat .ruby-version)"
      id: ruby_version
    - name: Set up Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: "${{ steps.ruby_version.outputs.RUBY_VERSION }}"
    - name: Get NodeJS version
      run: echo "::set-output name=NODE_VERSION::$(cat .node-version)"
      id: node_version
    - name: Set up NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: "${{ steps.node_version.outputs.NODE_VERSION }}"
    - name: Set up PostgreSQL
      run: |
        sudo apt-get install postgresql libpq-dev
        sudo service postgresql start
        sudo -u postgres createuser --superuser "$USER"
    - name: Install Dependencies
      run: bundle install
    - name: Set up test database
      run: bundle exec rake db:setup 
    - name: Run tests
      run: bundle exec rake test

    - name: Setup CodeClimate test-reporter
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > $CCTR
        chmod +x $CCTR
        $CCTR before-build
    - name: run RSpec tests and capture coverage
      run: |
        bundle exec rspec
        $CCTR format-coverage --output coverage/codeclimate.$SUITE.json --input-type simplecov
        
    - name: run Cucumber tests and capture coverage
      run: |
        bundle exec cucumber --retry 2
        $CCTR format-coverage --output coverage/codeclimate.$SUITE.json --input-type simplecov
  
    - name: Publish code coverage
      run: |
        export GIT_BRANCH="${GITHUB_REF/refs\/heads\//}"
        $CCTR sum-coverage coverage/codeclimate.*.json
        $CCTR upload-coverage --id ${{ secrets.CC_TEST_REPORTER_ID }}
        $CCTR after-build --id ${{ secrets.CC_TEST_REPORTER_ID }}